{"version":3,"sources":["styles/theme.ts","assets/fonts/RubikRegular.ttf","assets/fonts/RubikMedium.ttf","assets/fonts/RubikSemiBold.ttf","assets/fonts/RubikRegular.woff","assets/fonts/RobotoRegular.ttf","assets/fonts/RobotoMedium.ttf","assets/fonts/RobotoBold.ttf","helpers.ts","styles/globalStyles.tsx","components/Sidebar/styles.ts","components/Separator/Separator.tsx","components/Sidebar/SidebarNavLinks.tsx","components/Sidebar/Sidebar.tsx","components/PageWrapper/styles.ts","components/PageWrapper/PageWrapper.tsx","pages/Home/styles.ts","pages/Home/Home.tsx","App.tsx","index.tsx"],"names":["fontSizes","xSmall","small","root","medium","large","xLarge","xxLarge","xxxLarge","largest","device","tablet","laptop","darkTheme","contentBackground","navBackground","textColor","altTextColor","paletteDefault","lightTheme","pxToRem","px","GlobalStyles","createGlobalStyle","RubikRegularTTF","RubikRegulatWOFF","RubikMediumTTF","RubikSemiBoldTTF","RobotoRegularTTF","RobotoMediumTTF","RobotoBoldTTF","theme","Wrapper","styled","div","StyledHeader","header","StyledH1","h1","StyledP","p","StyledNav","nav","StyledUL","ul","StyledLink","a","isHomePageVisible","StyledFooter","footer","StyledHr","hr","Separator","sidebarOptions","key","label","path","SidebarNavLinks","map","option","Sidebar","href","StyledMain","main","MobileTopNav","MobileNavUL","MiddleNav","li","MobileNavLinks","PageWrapper","children","useState","openMobileNav","setOpenMobileNav","style","cursor","onClick","HomePageSection","section","Greeting","span","JobDescription","ContactWrapper","Home","homePageSectionRef","useRef","ref","isIntersecting","setIsIntersecting","observer","IntersectionObserver","entry","useEffect","observe","current","disconnect","useOnViewport","console","log","App","mode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8076ee03.chunk.js","sourcesContent":["const darkPalette = {\n  contentBackground: '#191919',\n  navBackground: '#343434',\n  textColor: '#9e9e9e',\n  altTextColor: '#FFFFFF',\n  paletteDefault: '#FFFFFF',\n}\nconst lightPalette = {\n  contentBackground: '#d3d3d3',\n  navBackground: '#FFFFFF',\n  textColor: '#696969',\n  altTextColor: '#343434',\n  paletteDefault: '#000000',\n}\n\nconst fontSizes = {\n  xSmall: 12,\n  small: 14,\n  root: 16,\n  medium: 18,\n  large: 20,\n  xLarge: 24,\n  xxLarge: 28,\n  xxxLarge: 36,\n  largest: 48,\n}\n\nexport const device = {\n  tablet: `(max-width: 768px)`,\n  laptop: `(max-width: 1024px)`,\n}\n\nexport const darkTheme = {\n  ...darkPalette,\n  fontSizes,\n  device,\n}\n\nexport const lightTheme = {\n  ...lightPalette,\n  fontSizes,\n  device,\n}\n","export default __webpack_public_path__ + \"static/media/RubikRegular.a4bece5c.ttf\";","export default __webpack_public_path__ + \"static/media/RubikMedium.2263cf4b.ttf\";","export default __webpack_public_path__ + \"static/media/RubikSemiBold.779458cb.ttf\";","export default __webpack_public_path__ + \"static/media/RubikRegular.581c4834.woff\";","export default __webpack_public_path__ + \"static/media/RobotoRegular.a8d6ac03.ttf\";","export default __webpack_public_path__ + \"static/media/RobotoMedium.7429a63c.ttf\";","export default __webpack_public_path__ + \"static/media/RobotoBold.75371f53.ttf\";","export const pxToRem = (px: number): string => `${px / 16}rem`\n","import { createGlobalStyle } from 'styled-components/macro'\n\nimport RubikRegularTTF from 'assets/fonts/RubikRegular.ttf'\nimport RubikMediumTTF from 'assets/fonts/RubikMedium.ttf'\nimport RubikSemiBoldTTF from 'assets/fonts/RubikSemiBold.ttf'\nimport RubikRegulatWOFF from 'assets/fonts/RubikRegular.woff'\n\nimport RobotoRegularTTF from 'assets/fonts/RobotoRegular.ttf'\nimport RobotoMediumTTF from 'assets/fonts/RobotoMedium.ttf'\nimport RobotoBoldTTF from 'assets/fonts/RobotoBold.ttf'\n\nimport { pxToRem } from 'helpers'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const GlobalStyles = createGlobalStyle<{ theme: any }>`\n    @font-face {\n        font-family: 'Rubik';\n        src: local('Rubik'), url(${RubikRegularTTF}) format('ttf'), url(${RubikRegulatWOFF}) format('woff');\n        font-style: normal;\n        font-weight: 400;\n    }\n\n    @font-face {\n        font-family: 'Rubik';\n        src: local('Rubik'), url(${RubikMediumTTF});\n        font-style: normal;\n        font-weight: 500;\n    }\n\n    @font-face {\n        font-family: 'Rubik';\n        src: local('Rubik'), url(${RubikSemiBoldTTF});\n        font-style: normal;\n        font-weight: 600;\n    }\n\n    @font-face {\n        font-family: 'Roboto';\n        src: local('Roboto'), url(${RobotoRegularTTF});\n        font-style: normal;\n        font-weight: 400;\n    }\n\n    @font-face {\n        font-family: 'Roboto';\n        src: local('Roboto'), url(${RobotoMediumTTF});\n        font-style: normal;\n        font-weight: 500;\n    }\n\n    @font-face {\n        font-family: 'Roboto';\n        src: local('Roboto'), url(${RobotoBoldTTF});\n        font-style: normal;\n        font-weight: 700;\n    }\n\n    *,\n    *::after,\n    *::before {\n        box-sizing: border-box;\n        font-family: 'Rubik';\n    }\n\n    html, div, span, applet, object, \n    iframe, h1, h2, h3, h4, h5, h6, p, \n    blockquote, pre, a, abbr, acronym, \n    address, big, cite, code, del, dfn, \n    em, img, ins, kbd, q, s, samp, small, \n    strike, strong, sub, sup, tt, var, b, \n    u, i, center, dl, dt, dd, ol, ul, li, \n    fieldset, form, label, legend, table, \n    caption, tbody, tfoot, thead, tr, th, \n    td, article, aside, canvas, details, \n    embed, figure, figcaption, footer, \n    header, hgroup, menu, nav, output, \n    ruby, section, summary, time, mark, \n    audio, video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font: inherit;\n    }\n\n    body {\n        width: 100%;\n        margin: 0;\n        padding: 0;\n        color: ${({ theme }): string => theme.textColor};\n        font-size: ${({ theme }): string => pxToRem(theme.fontSizes.root)};\n        background: ${({ theme }): string => theme.contentBackground};\n    }\n\n    a {\n        cursor: pointer;\n        text-decoration: none;\n        color: inherit;\n    }\n\n    #root {\n        display: flex;\n        min-height: 100vh;\n    }\n`\n","import styled from 'styled-components/macro'\n\nimport { pxToRem } from 'helpers'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  position: fixed;\n  width: ${pxToRem(280)};\n  z-index: 1;\n  background: ${({ theme }): string => theme.navBackground};\n  padding: ${pxToRem(32)};\n\n  @media ${({ theme }): string => theme.device.tablet} {\n    display: none;\n  }\n`\n\nexport const StyledHeader = styled.header`\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 25%;\n`\n\nexport const StyledH1 = styled.h1`\n  font-family: 'Roboto';\n  text-transform: uppercase;\n  font-size: ${({ theme }): string => pxToRem(theme.fontSizes.large)};\n  color: ${({ theme }): string => theme.paletteDefault};\n  font-weight: 500;\n  letter-spacing: ${pxToRem(1.6)};\n`\n\nexport const StyledP = styled.p`\n  font-size: ${pxToRem(14)};\n  margin: ${pxToRem(4)} 0 ${pxToRem(4)};\n`\n\nexport const StyledNav = styled.nav`\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 50%;\n  justify-content: center;\n  @media ${({ theme }): string => theme.device.tablet} {\n    flex: 0 0 100%;\n  }\n`\n\nexport const StyledUL = styled.ul`\n  list-style: none;\n  text-transform: uppercase;\n  font-weight: 500;\n  letter-spacing: ${pxToRem(1.6)};\n  color: #838383;\n  font-size: ${pxToRem(16)};\n  & > li {\n    height: ${pxToRem(48)};\n    @media ${({ theme }): string => theme.device.tablet} {\n      text-align: center;\n      height: ${pxToRem(96)};\n    }\n  }\n`\n\nexport const StyledLink = styled.a<{ isHomePageVisible?: boolean }>`\n  padding-bottom: ${pxToRem(8)};\n  ${({ isHomePageVisible, theme }): string => {\n    return isHomePageVisible\n      ? `\n      border-bottom: ${pxToRem(2)} solid ${theme.paletteDefault};\n      color: ${theme.paletteDefault};\n    `\n      : ''\n  }}\n  &:hover {\n    border-bottom: ${pxToRem(2)} solid ${({ theme }): string => theme.paletteDefault};\n    color: ${({ theme }): string => theme.paletteDefault};\n  }\n`\n\nexport const StyledFooter = styled.footer`\n  display: flex;\n  flex-direction: column;\n  flex: 0 0 25%;\n  justify-content: flex-end;\n  font-size: ${pxToRem(14)};\n  & > p > a {\n    direction: rtl;\n    unicode-bidi: bidi-override;\n    cursor: pointer;\n    line-height: 1.4em;\n    color: ${({ theme }): string => theme.paletteDefault};\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport { pxToRem } from 'helpers'\n\nconst StyledHr = styled.hr`\n  margin: ${pxToRem(12)} 0 ${pxToRem(12)};\n  border: none;\n`\n\nexport const Separator = (): JSX.Element => {\n  return <StyledHr />\n}\n","import React from 'react'\n\nimport { StyledNav, StyledUL, StyledLink } from './styles'\n\nconst sidebarOptions = [\n  {\n    key: 1,\n    label: 'Home',\n    path: '/',\n  },\n  {\n    key: 2,\n    label: 'My Work',\n    path: '/my-work',\n  },\n  {\n    key: 3,\n    label: 'Blogs',\n    path: '/blogs',\n  },\n  {\n    key: 4,\n    label: 'Services',\n    path: '/services',\n  },\n]\n\nexport const SidebarNavLinks = (): JSX.Element => {\n  return (\n    <StyledNav>\n      <StyledUL>\n        {sidebarOptions.map((option) => (\n          <li>\n            <StyledLink key={option.key}>{option.label}</StyledLink>\n          </li>\n        ))}\n      </StyledUL>\n    </StyledNav>\n  )\n}\n","import React from 'react'\n\nimport { Wrapper, StyledHeader, StyledFooter, StyledH1, StyledP } from './styles'\nimport { Separator } from 'components/Separator/Separator'\nimport { SidebarNavLinks } from './SidebarNavLinks'\n\nexport const Sidebar = ({ isHomePageVisible }: { isHomePageVisible: boolean }): JSX.Element => {\n  return (\n    <Wrapper>\n      <StyledHeader>\n        <a>\n          <StyledH1>Vivek Krishna</StyledH1>\n        </a>\n        <Separator />\n        <StyledP>Java Developer</StyledP>\n        <StyledP>React Developer</StyledP>\n        <StyledP>Full Stack Developer</StyledP>\n      </StyledHeader>\n      <SidebarNavLinks />\n      <StyledFooter>\n        <p>\n          {`Like what you see? Send me an email and tell me about it `}\n          <a href=\"mailto: vivekkrishnavk@gmail.com\">{`moc.liamg@kvanhsirkkeviv`}</a>\n          {'.'}\n          <br />\n          {`I ♥︎ emails.`}\n        </p>\n      </StyledFooter>\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components/macro'\n\nimport { pxToRem } from 'helpers'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  @media ${({ theme }): string => theme.device.tablet} {\n    flex-direction: column;\n    flex: 0 0 100%;\n  }\n`\n\nexport const StyledMain = styled.main`\n  min-height: 100vh;\n  margin-left: ${pxToRem(280)};\n  padding: ${pxToRem(120)} ${pxToRem(48)} 0;\n  @media ${({ theme }): string => theme.device.tablet} {\n    margin-left: 0;\n  }\n`\n\nexport const MobileTopNav = styled.div`\n  @media ${({ theme }): string => theme.device.tablet} {\n    display: flex;\n    background: ${({ theme }): string => theme.navBackground};\n    z-index: 1;\n    height: ${pxToRem(60)};\n    position: sticky;\n    top: 0;\n  }\n`\n\nexport const MobileNavUL = styled.ul`\n  @media ${({ theme }): string => theme.device.tablet} {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    list-style: none;\n    width: 100%;\n    padding: ${pxToRem(12)} ${pxToRem(32)};\n    text-transform: uppercase;\n    font-size: ${pxToRem(14)};\n    font-weight: 500;\n    letter-spacing: 1.1px;\n    align-items: center;\n  }\n`\n\nexport const MiddleNav = styled.li`\n  width: 80px;\n  font-size: ${pxToRem(16)};\n  font-weight: 500;\n  color: ${({ theme }): string => theme.paletteDefault};\n  text-align: center;\n`\n\nexport const MobileNavLinks = styled.div`\n  @media ${({ theme }): string => theme.device.tablet} {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: ${({ theme }): string => theme.navBackground};\n    width: 100%;\n    height: 100vh;\n    z-index: 1;\n  }\n`\n","import React, { useState } from 'react'\n\nimport { Sidebar } from 'components/Sidebar/Sidebar'\nimport { SidebarNavLinks } from 'components/Sidebar/SidebarNavLinks'\nimport { Wrapper, StyledMain, MobileTopNav, MobileNavUL, MiddleNav, MobileNavLinks } from './styles'\n\nexport const PageWrapper = ({\n  children,\n  isHomePageVisible,\n}: {\n  children: JSX.Element\n  isHomePageVisible: boolean\n}): JSX.Element => {\n  const [openMobileNav, setOpenMobileNav] = useState(false)\n  return (\n    <Wrapper>\n      <MobileTopNav>\n        <MobileNavUL>\n          <li style={{ cursor: 'pointer' }} onClick={(): void => setOpenMobileNav(!openMobileNav)}>\n            Menu\n          </li>\n          <MiddleNav>Vivek Krishna</MiddleNav>\n          <li style={{ cursor: 'pointer' }}>Email</li>\n        </MobileNavUL>\n      </MobileTopNav>\n      {openMobileNav ? (\n        <MobileNavLinks>\n          <SidebarNavLinks />\n        </MobileNavLinks>\n      ) : (\n        <>\n          <Sidebar isHomePageVisible={isHomePageVisible} />\n          <StyledMain>{children}</StyledMain>\n        </>\n      )}\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components/macro'\n\nimport { pxToRem } from 'helpers'\n\nexport const HomePageSection = styled.section`\n  box-sizing: border-box;\n  height: 100vh;\n  padding: ${pxToRem(48)};\n  @media ${({ theme }): string => theme.device.tablet} {\n    padding 0;\n  }\n`\n\nexport const Greeting = styled.span`\n  font-size: ${pxToRem(24)};\n  display: block;\n  letter-spacing: ${pxToRem(5.12)};\n  text-transform: uppercase;\n  color: ${({ theme }): string => theme.paletteDefault};\n  font-weight: 500;\n  margin-bottom: ${pxToRem(32)};\n  @media ${({ theme }): string => theme.device.tablet} {\n    font-size: ${pxToRem(18)};\n  }\n`\n\nexport const JobDescription = styled.span`\n  line-height: ${pxToRem(22.4)};\n  display: block;\n  font-weight: 500;\n  color: ${({ theme }): string => theme.paletteDefault};\n  font-size: ${pxToRem(42)};\n  line-height: ${pxToRem(56)};\n  word-wrap: break-word;\n  @media ${({ theme }): string => theme.device.tablet} {\n    font-size: ${pxToRem(20)};\n    line-height: ${pxToRem(40)};\n  }\n`\n\nexport const StyledH1 = styled.h1`\n  margin-bottom: ${pxToRem(32)};\n`\n\nexport const StyledP = styled.p`\n  font-size: ${pxToRem(32)};\n  margin-bottom: ${pxToRem(32)};\n  @media ${({ theme }): string => theme.device.tablet} {\n    font-size: ${pxToRem(16)};\n    line-height: ${pxToRem(30)};\n  }\n`\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const StyledLink = styled.a`\n  cursor: pointer;\n  font-weight: 500;\n  letter-spacing: ${pxToRem(1.28)};\n  text-transform: uppercase;\n  color: ${({ theme }): string => theme.paletteDefault};\n  margin-right: ${pxToRem(24)};\n  &:hover {\n    padding-bottom: ${pxToRem(8)};\n    border-bottom: ${pxToRem(2)} solid ${({ theme }): string => theme.paletteDefault};\n  }\n  @media ${({ theme }): string => theme.device.tablet} {\n    font-size: ${pxToRem(14)};\n  }\n`\n","import React, { useState, useEffect, useRef } from 'react'\n\nimport { PageWrapper } from 'components/PageWrapper/PageWrapper'\nimport {\n  HomePageSection,\n  Greeting,\n  JobDescription,\n  StyledP,\n  ContactWrapper,\n  StyledLink,\n  StyledH1,\n} from './styles'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useOnViewport(ref: any): boolean {\n  const [isIntersecting, setIsIntersecting] = useState(false)\n  const observer = new IntersectionObserver(([entry]) => setIsIntersecting(entry.isIntersecting))\n  useEffect(() => {\n    observer.observe(ref.current)\n    return (): void => {\n      observer.disconnect()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return isIntersecting\n}\n\nexport const Home = (): JSX.Element => {\n  const homePageSectionRef = useRef(null)\n  const isHomePageVisible = useOnViewport(homePageSectionRef)\n  console.log(isHomePageVisible)\n  return (\n    <PageWrapper isHomePageVisible={isHomePageVisible}>\n      <>\n        <HomePageSection>\n          <StyledH1>\n            <Greeting>Hi, I'm Vivek</Greeting>\n            <JobDescription>I am a Full Stack Java and React Developer.</JobDescription>\n          </StyledH1>\n          <StyledP>\n            I'm a frontend and backend developer with a broad range of skills from frontend UX\n            Design to backend database design\n          </StyledP>\n          <ContactWrapper>\n            <StyledLink>See My Work</StyledLink>\n            <StyledLink href=\"mailto: vivekkrishnavk@gmail.com\">Get In Touch</StyledLink>\n          </ContactWrapper>\n        </HomePageSection>\n        <HomePageSection ref={homePageSectionRef}>\n          <StyledH1>\n            <Greeting>Hi, I'm Vivek</Greeting>\n            <JobDescription>I am a Full Stack Java and React Developer.</JobDescription>\n          </StyledH1>\n          <StyledP>\n            I'm a frontend and backend developer with a broad range of skills from frontend UX\n            Design to backend database design\n          </StyledP>\n          <ContactWrapper>\n            <StyledLink>See My Work</StyledLink>\n            <StyledLink href=\"mailto: vivekkrishnavk@gmail.com\">Get In Touch</StyledLink>\n          </ContactWrapper>\n        </HomePageSection>\n      </>\n    </PageWrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { ThemeProvider } from 'styled-components/macro'\n\nimport { darkTheme, lightTheme } from './styles/theme'\nimport { GlobalStyles } from './styles/globalStyles'\nimport { Home } from 'pages/Home/Home'\n\nfunction App(): JSX.Element {\n  const [mode] = useState('light')\n  return (\n    <ThemeProvider theme={mode === 'light' ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <Home />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}